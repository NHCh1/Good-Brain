package Student;


import MainProgram.general_home;
import java.awt.Component;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Nightinggale
 */
public class StdStudentPage extends javax.swing.JFrame {
    private final String studentId;
    private String selectedProjectId;
    public String getSelectedProjectId() {
        return selectedProjectId;
    }
    private StdProjectInfo project;
    /**
     * Creates new form student
     * @param id
     * @throws java.io.IOException
     */
    public StdStudentPage(String id) throws IOException {
        this.studentId = id;
        initComponents();
        
        StdStudentInfo student = StdStudentOperation.readStudentRecord(id);
        if (student != null) {
            ArrayList<String> projectIDlist = student.getProjectIDlist();
            System.out.println("Project ID List: " + projectIDlist);
            // Create a DefaultComboBoxModel to hold the project IDs`
            DefaultComboBoxModel<String> projectIdModel = new DefaultComboBoxModel<>();
            // Add project IDs to the model
            projectIdModel.addElement("Please select a project ID.");
            for (String projectId : projectIDlist) {
                projectIdModel.addElement(projectId);
            }
            // Set the model to the combo box
            projectId.setModel(projectIdModel);
            // Set default project page
            projLab.setText("Please select a project ID.");
            superLab.setText("Please select a project ID.");
            secondLab.setText("Please select a project ID.");
            dateLab.setText("Please select a project ID.");
        }
        
        stdSetUserProfile1.setIcon(new ImageIcon("src/Profile/"+ studentId +".jpg"));
    }

//    public void setVisible(boolean b) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        Menubar = new javax.swing.JPanel();
        projectTab = new javax.swing.JLabel();
        submissionTab = new javax.swing.JLabel();
        presentationTab = new javax.swing.JLabel();
        feedbackTab = new javax.swing.JLabel();
        tabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        projectId = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        projLab = new javax.swing.JLabel();
        superLab = new javax.swing.JLabel();
        secondLab = new javax.swing.JLabel();
        dateLab = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        editSubmissionBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        subIdLab = new javax.swing.JLabel();
        subStatusLab = new javax.swing.JLabel();
        subGradeLab = new javax.swing.JLabel();
        subNameLab = new javax.swing.JLabel();
        subPathLab = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        subSuperFeed = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        subSecondFeed = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        editPreDateBtn = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        editPreStuBtn = new javax.swing.JButton();
        preIdLab = new javax.swing.JLabel();
        preDateLab = new javax.swing.JLabel();
        preStuLab = new javax.swing.JLabel();
        preSuperLab = new javax.swing.JLabel();
        preSecondLab = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        feedContent = new javax.swing.JTextArea();
        createFeedBtn = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        feedProjId = new javax.swing.JLabel();
        feedStuId = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        editPreIdLab = new javax.swing.JLabel();
        editPreOriLab = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        newPreHour = new javax.swing.JComboBox<>();
        updatePreBtn = new javax.swing.JButton();
        newPreDate = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        editDateLab = new javax.swing.JLabel();
        editPreLab = new javax.swing.JLabel();
        newPreMinute = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        Header = new javax.swing.JPanel();
        reloadBtn = new javax.swing.JButton();
        Logo = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        stdSetUserProfile1 = new avatar.ImageAvatar();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 600));
        setMinimumSize(new java.awt.Dimension(900, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Menubar.setBackground(new java.awt.Color(172, 190, 174));
        Menubar.setForeground(new java.awt.Color(59, 67, 56));
        Menubar.setMaximumSize(new java.awt.Dimension(900, 50));
        Menubar.setMinimumSize(new java.awt.Dimension(900, 50));
        Menubar.setPreferredSize(new java.awt.Dimension(900, 50));

        projectTab.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        projectTab.setForeground(new java.awt.Color(56, 67, 59));
        projectTab.setText("Project");
        projectTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectTabMouseClicked(evt);
            }
        });

        submissionTab.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        submissionTab.setForeground(new java.awt.Color(56, 67, 59));
        submissionTab.setText("Submission");
        submissionTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submissionTabMouseClicked(evt);
            }
        });

        presentationTab.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        presentationTab.setForeground(new java.awt.Color(56, 67, 59));
        presentationTab.setText("Presentation");
        presentationTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                presentationTabMouseClicked(evt);
            }
        });

        feedbackTab.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        feedbackTab.setForeground(new java.awt.Color(56, 67, 59));
        feedbackTab.setText("Feedback");
        feedbackTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feedbackTabMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout MenubarLayout = new javax.swing.GroupLayout(Menubar);
        Menubar.setLayout(MenubarLayout);
        MenubarLayout.setHorizontalGroup(
            MenubarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenubarLayout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(projectTab)
                .addGap(91, 91, 91)
                .addComponent(submissionTab)
                .addGap(86, 86, 86)
                .addComponent(presentationTab)
                .addGap(85, 85, 85)
                .addComponent(feedbackTab)
                .addGap(88, 88, 88))
        );
        MenubarLayout.setVerticalGroup(
            MenubarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenubarLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(MenubarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(presentationTab)
                    .addComponent(submissionTab)
                    .addComponent(feedbackTab)
                    .addComponent(projectTab))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getContentPane().add(Menubar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 900, 50));

        tabbedPane.setBackground(new java.awt.Color(239, 240, 234));
        tabbedPane.setForeground(new java.awt.Color(59, 67, 56));
        tabbedPane.setMaximumSize(new java.awt.Dimension(900, 490));
        tabbedPane.setMinimumSize(new java.awt.Dimension(900, 490));
        tabbedPane.setPreferredSize(new java.awt.Dimension(900, 490));

        jPanel1.setBackground(new java.awt.Color(239, 240, 234));
        jPanel1.setForeground(new java.awt.Color(59, 67, 56));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(56, 67, 59));
        jLabel2.setText("Assessment Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, -1, -1));

        jLabel3.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(56, 67, 59));
        jLabel3.setText("Due Date");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, -1, -1));

        projectId.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        projectId.setForeground(new java.awt.Color(56, 67, 59));
        projectId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectIdActionPerformed(evt);
            }
        });
        jPanel1.add(projectId, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(56, 67, 59));
        jLabel4.setText("Supervisor");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, -1, -1));

        jLabel5.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(56, 67, 59));
        jLabel5.setText("Second Marker");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 270, -1));

        jLabel13.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(56, 67, 59));
        jLabel13.setText("Project ID");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 160, 30));

        projLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        projLab.setForeground(new java.awt.Color(56, 67, 59));
        projLab.setText("projName");
        jPanel1.add(projLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, -1, -1));

        superLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        superLab.setForeground(new java.awt.Color(56, 67, 59));
        superLab.setText("superId");
        jPanel1.add(superLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, -1, -1));

        secondLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        secondLab.setForeground(new java.awt.Color(56, 67, 59));
        secondLab.setText("secondId");
        jPanel1.add(secondLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, -1, -1));

        dateLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        dateLab.setForeground(new java.awt.Color(56, 67, 59));
        dateLab.setText("dueDate");
        jPanel1.add(dateLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, -1, -1));

        tabbedPane.addTab("Tab1", jPanel1);

        jPanel2.setBackground(new java.awt.Color(239, 240, 234));
        jPanel2.setForeground(new java.awt.Color(59, 67, 56));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        editSubmissionBtn.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        editSubmissionBtn.setForeground(new java.awt.Color(56, 67, 59));
        editSubmissionBtn.setText("Edit");
        editSubmissionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSubmissionBtnActionPerformed(evt);
            }
        });
        jPanel2.add(editSubmissionBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 350, 110, 40));

        jLabel1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(56, 67, 59));
        jLabel1.setText("Submission ID");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        jLabel6.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(56, 67, 59));
        jLabel6.setText("Submission Status");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        jLabel7.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(56, 67, 59));
        jLabel7.setText("Submission Grade");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, -1));

        jLabel8.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(56, 67, 59));
        jLabel8.setText("Submission Name");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        jLabel9.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(56, 67, 59));
        jLabel9.setText("Submission Link");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, -1, -1));

        jLabel26.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(56, 67, 59));
        jLabel26.setText("Supervisor Feedback");
        jPanel2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 80, -1, -1));

        jLabel27.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(56, 67, 59));
        jLabel27.setText("Second Marker Feedback");
        jPanel2.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, -1, -1));

        subIdLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        subIdLab.setForeground(new java.awt.Color(56, 67, 59));
        subIdLab.setText(": No submission");
        jPanel2.add(subIdLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, -1, -1));

        subStatusLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        subStatusLab.setForeground(new java.awt.Color(56, 67, 59));
        subStatusLab.setText(": Waiting for submission");
        jPanel2.add(subStatusLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, -1, -1));

        subGradeLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        subGradeLab.setForeground(new java.awt.Color(56, 67, 59));
        subGradeLab.setText(": Not available");
        jPanel2.add(subGradeLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, -1, -1));

        subNameLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        subNameLab.setForeground(new java.awt.Color(56, 67, 59));
        subNameLab.setText(": Not available");
        jPanel2.add(subNameLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, -1, -1));

        subPathLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        subPathLab.setForeground(new java.awt.Color(56, 67, 59));
        subPathLab.setText(": Not available");
        subPathLab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subPathLabMouseClicked(evt);
            }
        });
        jPanel2.add(subPathLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, -1, -1));

        subSuperFeed.setColumns(20);
        subSuperFeed.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        subSuperFeed.setRows(3);
        subSuperFeed.setText("Not available");
        jScrollPane4.setViewportView(subSuperFeed);

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 110, -1, 70));

        subSecondFeed.setColumns(20);
        subSecondFeed.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        subSecondFeed.setRows(3);
        subSecondFeed.setText("Not available");
        jScrollPane5.setViewportView(subSecondFeed);

        jPanel2.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 250, -1, -1));

        tabbedPane.addTab("Tab2", jPanel2);

        jPanel3.setBackground(new java.awt.Color(239, 240, 234));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(59, 67, 56));
        jLabel10.setText("Presentation ID");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, -1, -1));

        jLabel11.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(59, 67, 56));
        jLabel11.setText("Datetime");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, -1, -1));

        jLabel12.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(59, 67, 56));
        jLabel12.setText("Presentation Status");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        editPreDateBtn.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        editPreDateBtn.setText("Change");
        editPreDateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPreDateBtnActionPerformed(evt);
            }
        });
        jPanel3.add(editPreDateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 380, 110, -1));

        jLabel21.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(59, 67, 56));
        jLabel21.setText("Lecture Supervisor Acceptance");
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, -1, -1));

        jLabel25.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(59, 67, 56));
        jLabel25.setText("Second Marker Acceptance");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, -1, -1));

        editPreStuBtn.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        editPreStuBtn.setText("Accept");
        editPreStuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPreStuBtnActionPerformed(evt);
            }
        });
        jPanel3.add(editPreStuBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, 110, -1));

        preIdLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        preIdLab.setText("preIdLab");
        jPanel3.add(preIdLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 60, -1, -1));

        preDateLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        preDateLab.setText("preDateLab");
        jPanel3.add(preDateLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 120, -1, -1));

        preStuLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        preStuLab.setText("preStuLab");
        jPanel3.add(preStuLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, -1, -1));

        preSuperLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        preSuperLab.setText("preSuperLab");
        jPanel3.add(preSuperLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 240, -1, -1));

        preSecondLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        preSecondLab.setText("preSecondLab");
        jPanel3.add(preSecondLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, -1, -1));

        tabbedPane.addTab("Tab3", jPanel3);

        jPanel4.setBackground(new java.awt.Color(239, 240, 234));

        feedContent.setColumns(20);
        feedContent.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        feedContent.setRows(5);
        feedContent.setText("Please provide feedback for this project.");
        jScrollPane1.setViewportView(feedContent);

        createFeedBtn.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        createFeedBtn.setText("Submit Feedback");
        createFeedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFeedBtnActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel15.setText("Project ID");

        jLabel16.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel16.setText("Student ID");

        jLabel19.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel19.setText("Feedback Content");

        feedProjId.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        feedProjId.setText("jLabel20");

        feedStuId.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        feedStuId.setText("jLabel22");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 206, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(createFeedBtn))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(feedStuId)
                            .addComponent(feedProjId)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel19)))
                .addGap(170, 170, 170))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(feedProjId)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(feedStuId))
                .addGap(26, 26, 26)
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createFeedBtn)
                .addGap(61, 61, 61))
        );

        tabbedPane.addTab("Tab4", jPanel4);

        jPanel5.setBackground(new java.awt.Color(239, 240, 234));

        editPreIdLab.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        editPreIdLab.setForeground(new java.awt.Color(59, 67, 56));
        editPreIdLab.setText("Presentation ID");

        editPreOriLab.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        editPreOriLab.setForeground(new java.awt.Color(59, 67, 56));
        editPreOriLab.setText("Original Datetime");

        jLabel24.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(59, 67, 56));
        jLabel24.setText("New Presentation Time");

        newPreHour.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        newPreHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "09", "10", "11", "12", "13", "14", "15", "16", "17", "18" }));

        updatePreBtn.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        updatePreBtn.setText("Update");
        updatePreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePreBtnActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel14.setText("New Presentation Date");

        editDateLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        editDateLab.setText(": Presentation date not available yet.");

        editPreLab.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        editPreLab.setText(": Presentation slot not book yet.");

        newPreMinute.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        newPreMinute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55" }));

        jLabel18.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jLabel18.setText(":");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updatePreBtn)
                .addGap(400, 400, 400))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(jLabel17))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(184, 184, 184)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editPreOriLab)
                                    .addComponent(editPreIdLab)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(188, 188, 188)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel24))))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newPreDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editPreLab)
                            .addComponent(editDateLab)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(newPreHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newPreMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(editPreIdLab)
                                    .addComponent(editPreLab)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(jLabel17)))
                        .addGap(38, 38, 38)
                        .addComponent(editPreOriLab))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(editDateLab)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel14)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newPreDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newPreHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)
                        .addComponent(newPreMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addComponent(updatePreBtn)
                .addGap(45, 45, 45))
        );

        tabbedPane.addTab("Tab5", jPanel5);

        getContentPane().add(tabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 900, 490));
        tabbedPane.getAccessibleContext().setAccessibleDescription("");

        Header.setBackground(new java.awt.Color(209, 211, 199));
        Header.setForeground(new java.awt.Color(59, 67, 56));
        Header.setMaximumSize(new java.awt.Dimension(900, 100));
        Header.setMinimumSize(new java.awt.Dimension(900, 100));
        Header.setPreferredSize(new java.awt.Dimension(900, 100));

        reloadBtn.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        reloadBtn.setText("Refresh");
        reloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadBtnActionPerformed(evt);
            }
        });

        Logo.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        Logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/logo.png"))); // NOI18N
        Logo.setText("GOODBRAIN");
        Logo.setIconTextGap(10);

        exit.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/logout.png"))); // NOI18N
        exit.setText("Exit");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 367, Short.MAX_VALUE)
                .addComponent(stdSetUserProfile1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(reloadBtn)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stdSetUserProfile1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addComponent(reloadBtn)
                        .addGap(18, 18, 18)
                        .addComponent(exit)))
                .addGap(20, 20, 20))
        );

        getContentPane().add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 100));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editSubmissionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSubmissionBtnActionPerformed
        try {
            StdSubmissionInfo readSub = StdStudentOperation.readSubmissionRecord(selectedProjectId, studentId);
            if (readSub != null) {
//                System.out.println("Submission is found.");
            } else {
                StdSubmissionInfo createSub = StdStudentOperation.createSubmissionRecord(selectedProjectId, studentId);
                if (createSub != null) {
                    String subID = createSub.getSubmissionID();
                    String subStatus = createSub.getSubmissionStatus();
                    String subGrade = createSub.getSubmissionGrade();
                    String subName = createSub.getSubmissionName();
                    String subPath = createSub.getSubmissionPath();
                    String subSuper = createSub.getSupervisorFeedback();
                    String subSecond = createSub.getSecondMarkerFeedback();
                    // Print info on submissionTab
                    subIdLab.setText(": " + subID);
                    subStatusLab.setText(": " + subStatus);
                    subGradeLab.setText(": " + subGrade);
                    subNameLab.setText(": " + subName);
                    subPathLab.setText(": Click to view more.");
                    subSuperFeed.setText(": " + subSuper);
                    subSecondFeed.setText(": " + subSecond);
                }    
                tabbedPane.setSelectedIndex(1);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        JFileChooser uploadSubFile = new JFileChooser();
        uploadSubFile.setDialogTitle("Submission File Uploader");
        uploadSubFile.setSize(600, 400);
        uploadSubFile.setApproveButtonText("Open");
        int status = uploadSubFile.showOpenDialog(null);
        if (status == JFileChooser.APPROVE_OPTION) {
            File subFile = uploadSubFile.getSelectedFile();
            try {
                String projectId = getSelectedProjectId();
                StdSubmissionInfo submission = StdStudentOperation.editSubmissionRecord(projectId, studentId, subFile);
                loadData(studentId, projectId, project);
                JOptionPane.showMessageDialog(null, "Submission is updated successfully.", "Information", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (status == JFileChooser.CANCEL_OPTION) {
            uploadSubFile.setVisible(false);
            tabbedPane.setSelectedIndex(1);
        }
    }//GEN-LAST:event_editSubmissionBtnActionPerformed

    private void editPreDateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPreDateBtnActionPerformed
        if (selectedProjectId != null) {
            tabbedPane.setSelectedIndex(4);
        } else {
            JOptionPane.showMessageDialog(null, "Project ID is not selected yet!", "Warning", JOptionPane.WARNING_MESSAGE);
            tabbedPane.setSelectedIndex(0);
        }
    }//GEN-LAST:event_editPreDateBtnActionPerformed

    private void projectTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectTabMouseClicked
        tabbedPane.setSelectedIndex(0);
    }//GEN-LAST:event_projectTabMouseClicked

    private void submissionTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submissionTabMouseClicked
        if (selectedProjectId != null) {
            tabbedPane.setSelectedIndex(1);
        } else {
            JOptionPane.showMessageDialog(null, "Project ID is not selected yet!", "Warning", JOptionPane.WARNING_MESSAGE);
            tabbedPane.setSelectedIndex(0);
        }
    }//GEN-LAST:event_submissionTabMouseClicked

    private void presentationTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_presentationTabMouseClicked
        if (selectedProjectId != null) {
            try {
                StdSubmissionInfo submission = StdStudentOperation.readSubmissionRecord(selectedProjectId, studentId);
                if (submission != null) {
                    StdPresentationInfo presentation = StdStudentOperation.readPresentationRecord(selectedProjectId, studentId);
                    if (presentation != null) {
                        System.out.println("Presentation record for student " + studentId + " is found.");
                        String stuAccept = presentation.getStudentAcceptance();
                        String superAccept = presentation.getSupervisorAcceptance();
                        String secondAccept = presentation.getSecondMarkerAcceptance();
                        if (stuAccept.equals("Accept") && superAccept.equals("Accept") && secondAccept.equals("Accept")) {
                            JOptionPane.showMessageDialog(null, "Presentation slot is finalized.", "Information", JOptionPane.INFORMATION_MESSAGE);
                            editPreDateBtn.setVisible(false);
                            editPreStuBtn.setVisible(false);
                        } else if (stuAccept.equals("Pending")) {
                            JOptionPane.showMessageDialog(null, "Presentation slot is pending on student side.", "Information", JOptionPane.INFORMATION_MESSAGE);
                            editPreDateBtn.setVisible(true);
                            editPreStuBtn.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(null, "Presentation slot is pending at lecturer side.", "Information", JOptionPane.INFORMATION_MESSAGE);
                            editPreDateBtn.setVisible(true);
                            editPreStuBtn.setVisible(false);
                        }
                        tabbedPane.setSelectedIndex(2);
                    } else {
                        JOptionPane.showMessageDialog(null, "Presentation record is not found. Please select a valid date to book slot.", "Information", JOptionPane.INFORMATION_MESSAGE);
                        tabbedPane.setSelectedIndex(4);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Presentation not available because no submission found!", "Warning", JOptionPane.WARNING_MESSAGE);
                    tabbedPane.setSelectedIndex(1);
                }
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
            }            
        } else {
            JOptionPane.showMessageDialog(null, "Project ID is not selected yet!", "Warning", JOptionPane.WARNING_MESSAGE);
            tabbedPane.setSelectedIndex(0);
        }
    }//GEN-LAST:event_presentationTabMouseClicked

    private void projectIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectIdActionPerformed
        try {
            this.selectedProjectId = (String) projectId.getSelectedItem();
            this.project = StdStudentOperation.readProjectRecord(selectedProjectId);
            loadData(studentId, selectedProjectId, project);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_projectIdActionPerformed

    private void editPreStuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPreStuBtnActionPerformed
        try {
            StdPresentationInfo presentation = StdStudentOperation.updateStudentAcceptance(selectedProjectId, studentId);
            JOptionPane.showMessageDialog(null, "Student acceptance is updated successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);
            editPreDateBtn.setVisible(false);
            editPreStuBtn.setVisible(false);
            loadData(studentId, selectedProjectId, project);
            tabbedPane.setSelectedIndex(2);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editPreStuBtnActionPerformed

    private void subPathLabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subPathLabMouseClicked
        try {
            StdSubmissionInfo submission = StdStudentOperation.readSubmissionRecord(selectedProjectId, studentId);
            if (submission != null) {
                String subName = submission.getSubmissionName();
                String subPath = submission.getSubmissionPath();
                if (Desktop.isDesktopSupported()) {
                    Desktop desktop = Desktop.getDesktop();
                    File uploadedFile = new File(subPath);
                    if (uploadedFile.exists()) {
                        desktop.open(uploadedFile);
                    } else {
                        JOptionPane.showMessageDialog(null, subName + " File not found: " + subPath, "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Submission found however opening files not supported on this platform.", "Error", JOptionPane.ERROR_MESSAGE);
                } 
            } else {
                JOptionPane.showMessageDialog(null, "Submission for this project not found! Please click 'Edit' button to submit.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_subPathLabMouseClicked

    private void updatePreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePreBtnActionPerformed
        try {
            loadData(studentId, selectedProjectId, project);
            StdPresentationInfo presentation = StdStudentOperation.readPresentationRecord(selectedProjectId, studentId);
            if (presentation != null) {
                System.out.println("Editing presentation slot for student " + studentId + ".");
                LocalDate oriLocalDate = presentation.getPresentationDate();
                Date oriDate = StdStudentOperation.localDateToDate(oriLocalDate);
                newPreDate.setDate(oriDate);
                Date newDate = newPreDate.getDate();
                LocalDate newLocalDate = StdStudentOperation.dateToLocalDate(newDate);
                String newTime = newPreHour.getSelectedItem() +":"+ newPreMinute.getSelectedItem();
                StdStudentOperation.editPresentationDateRecord(selectedProjectId, studentId, newLocalDate, newTime);               
            } else {
                System.out.println("Creating presentation slot for student " + studentId + ".");
                Date oriDate = new Date();
                Date newDate = newPreDate.getDate();
                LocalDate newLocalDate = StdStudentOperation.dateToLocalDate(newDate);
                String newTime = newPreHour.getSelectedItem() +":"+ newPreMinute.getSelectedItem();
                StdPresentationInfo createPre = StdStudentOperation.createPresentationRecord(selectedProjectId, studentId, newLocalDate, newTime);
                if (createPre != null) {
                    loadData(studentId, selectedProjectId, project);
                } else {
                    JOptionPane.showMessageDialog(null, "An error occurred while requesting presentation slot.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            loadData(studentId, selectedProjectId, project);
            tabbedPane.setSelectedIndex(0);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updatePreBtnActionPerformed

    private void reloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadBtnActionPerformed
        try {
            loadData(studentId, selectedProjectId, project);
            JOptionPane.showMessageDialog(null, "Tab is refreshed successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reloadBtnActionPerformed

    private void createFeedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFeedBtnActionPerformed
        String content = feedContent.getText();
        StdStudentOperation.createFeedbackRecord(studentId, selectedProjectId, content);
        tabbedPane.setSelectedIndex(0);
    }//GEN-LAST:event_createFeedBtnActionPerformed

    private void feedbackTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackTabMouseClicked
        try {
            StdFeedbackInfo feedback = StdStudentOperation.readFeedbackRecord(selectedProjectId, studentId);
            if (feedback !=null) {
                String feedID = feedback.getFeedbackID();
                JOptionPane.showMessageDialog(null, "Feedback " +feedID+ " is submitted previously.", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                feedProjId.setText(": " + selectedProjectId);
                feedStuId.setText(": " + studentId);
                tabbedPane.setSelectedIndex(3);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StdStudentPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_feedbackTabMouseClicked

    private void userProfileComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_userProfileComponentShown

    }//GEN-LAST:event_userProfileComponentShown

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        this.dispose();
        general_home generalHome = new general_home();
        generalHome.setVisible(true);
    }//GEN-LAST:event_exitMouseClicked
   
    public void loadData(String studentId, String projectId, StdProjectInfo project) throws FileNotFoundException, IOException {
        if (project != null) {
            String projName = project.getProjectName();
            String superId = project.getSupervisorId();
            String secondId = project.getSecondMarkerId();
            LocalDate dueDate = project.getDueDate();
            // Print info on projectTab
            projLab.setText(": " + projName);
            superLab.setText(": " + superId);
            secondLab.setText(": " + secondId);
            dateLab.setText(": " + StdStudentOperation.localDateToString(dueDate));
            StdSubmissionInfo submission;
            submission = StdStudentOperation.readSubmissionRecord(projectId, studentId);
            if (submission != null) {
                String subID = submission.getSubmissionID();
                String subStatus = submission.getSubmissionStatus();
                String subGrade = submission.getSubmissionGrade();
                String subName = submission.getSubmissionName();
                String subPath = submission.getSubmissionPath();
                String subSuper = submission.getSupervisorFeedback();
                String subSecond = submission.getSecondMarkerFeedback();
                // Print info on submissionTab
                subIdLab.setText(": " + subID);
                subStatusLab.setText(": " + subStatus);
                subGradeLab.setText(": " + subGrade);
                subNameLab.setText(": " + subName);
                subPathLab.setText(": Click to view more.");
                subSuperFeed.setText(": " + subSuper);
                subSecondFeed.setText(": " + subSecond);
            } else {
//                System.out.println("Submission for Student ID " + studentId + " not found.");
//                notification prompt joptionpane
            }
            StdPresentationInfo presentation = StdStudentOperation.readPresentationRecord(projectId, studentId);
            if (presentation != null) {
                String preID = presentation.getPresentationID();
                LocalDate preDate = presentation.getPresentationDate();
                String preTime = presentation.getPresentationTime();
                String preStu = presentation.getStudentAcceptance();
                String preSuper = presentation.getSupervisorAcceptance();
                String preSecond = presentation.getSecondMarkerAcceptance();
               // Print info on presentationTab
               preIdLab.setText(": " + preID);
               editPreLab.setText(": " + preID);
               preDateLab.setText(": " + StdStudentOperation.localDateToString(preDate) + ":" + preTime);
               editDateLab.setText(": " +StdStudentOperation.localDateToString(preDate));
               preStuLab.setText(": " + preStu);
               preSuperLab.setText(": " + preSuper);
               preSecondLab.setText(": " + preSecond);
            } else {
//                System.out.println("Presentation for Student ID " + studentId + " not found.");
//                notification prompt joptionpane
            }
            //result - studentID, projectIdlist
            StdResultInfo result = StdStudentOperation.readProjectResult(studentId);
        } else {
            JOptionPane.showMessageDialog(null, "Project " + projectId + " not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StdStudentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // Create an instance of StdStudentPage
//        StdStudentPage studentPage = new StdStudentPage();
        // Read Student ID and Intake Code
//        String studentId = this.studentId;
//        StdStudentInfo student = StdStudentOperation.readStudentRecord(studentId);
//        if (student != null) {
//            ArrayList<String> projectIDlist = student.getProjectIDlist();
//            System.out.println("Project ID List: " + projectIDlist);
//            // Create a DefaultComboBoxModel to hold the project IDs`
//            DefaultComboBoxModel<String> projectIdModel = new DefaultComboBoxModel<>();
//            // Add project IDs to the model
//            projectIdModel.addElement("Please select a project ID.");
//            for (String projectId : projectIDlist) {
//                projectIdModel.addElement(projectId);
//            }
//            // Set the model to the combo box
//            studentPage.projectId.setModel(projectIdModel);
//            // Set default project page
//            studentPage.projLab.setText("Please select a project ID.");
//            studentPage.superLab.setText("Please select a project ID.");
//            studentPage.secondLab.setText("Please select a project ID.");
//            studentPage.dateLab.setText("Please select a project ID.");
//        }
//        // Display the StdStudentPage
//        java.awt.EventQueue.invokeLater(() -> {
//            studentPage.setVisible(true);
//        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Header;
    private javax.swing.JLabel Logo;
    private javax.swing.JPanel Menubar;
    private javax.swing.JButton createFeedBtn;
    private javax.swing.JLabel dateLab;
    private javax.swing.JLabel editDateLab;
    private javax.swing.JButton editPreDateBtn;
    private javax.swing.JLabel editPreIdLab;
    private javax.swing.JLabel editPreLab;
    private javax.swing.JLabel editPreOriLab;
    private javax.swing.JButton editPreStuBtn;
    private javax.swing.JButton editSubmissionBtn;
    private javax.swing.JLabel exit;
    private javax.swing.JTextArea feedContent;
    private javax.swing.JLabel feedProjId;
    private javax.swing.JLabel feedStuId;
    private javax.swing.JLabel feedbackTab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private com.toedter.calendar.JDateChooser newPreDate;
    private javax.swing.JComboBox<String> newPreHour;
    private javax.swing.JComboBox<String> newPreMinute;
    private javax.swing.JLabel preDateLab;
    private javax.swing.JLabel preIdLab;
    private javax.swing.JLabel preSecondLab;
    private javax.swing.JLabel preStuLab;
    private javax.swing.JLabel preSuperLab;
    private javax.swing.JLabel presentationTab;
    private javax.swing.JLabel projLab;
    private javax.swing.JComboBox<String> projectId;
    private javax.swing.JLabel projectTab;
    private javax.swing.JButton reloadBtn;
    private javax.swing.JLabel secondLab;
    private avatar.ImageAvatar stdSetUserProfile1;
    private javax.swing.JLabel subGradeLab;
    private javax.swing.JLabel subIdLab;
    private javax.swing.JLabel subNameLab;
    private javax.swing.JLabel subPathLab;
    private javax.swing.JTextArea subSecondFeed;
    private javax.swing.JLabel subStatusLab;
    private javax.swing.JTextArea subSuperFeed;
    private javax.swing.JLabel submissionTab;
    private javax.swing.JLabel superLab;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JButton updatePreBtn;
    // End of variables declaration//GEN-END:variables
}
